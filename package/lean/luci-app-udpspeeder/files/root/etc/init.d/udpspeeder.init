#!/bin/sh /etc/rc.common

START=88
STOP=15

NAME=udpspeeder

_log() {
	logger -p "daemon.$1" -t "$NAME" "$2"
}

has_valid_server() {
	local server
	for server in $@; do
		[ "$(uci_get $NAME $server)" = "servers" ] && return 0
	done
	return 1
}

validate_config_section() {
	local ret=$(/sbin/validate_data "$NAME" general "$1" \
		'server:uciname' \
		'daemon_user:string:root' \
		2> /dev/null)
	[ $? -ne 0 ] && return 1
	eval "$ret"
}

validate_server_section() {
	local ret=$(/sbin/validate_data "$NAME" servers "$1" \
		'server_addr:host' \
		'server_port:port:8080' \
		'listen_addr:ipaddr:127.0.0.1' \
		'listen_port:port:2080' \
		'key:string' \
		'fec:string:20:10' \
		'mode:or("0", "1"):0' \
		'timeout:uinteger' \
		'mtu:range(0,2000)' \
		'queue_len:uinteger' \
		'jitter:uinteger' \
		'interval:uinteger' \
		'random_drop:range(0,10000)' \
		'disable_obscure:bool' \
		'log_level:range(0,6)' \
		2> /dev/null)
	[ $? -ne 0 ] && return 1
	eval "$ret"
}

start_instance() {
	local server="$1"

	if [ -z "$server" -o "$server" == "nil" ]; then
		return 0
	elif ! validate_server_section "$server"; then
		_log "err" "Server config validation failed."
		return 1
	fi

	/sbin/validate_data "ipaddr" "$server_addr" >/dev/null 2>&1
	[ $? -ne 0 ] && server_addr=$(nslookup "$server_addr" | \
		sed -n 's/^Address[[:space:]]*[0-9]*:[[:space:]]*\(\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}\)$/\1/p')
	if [ -z "$server_addr" ]; then
		_log "err" "Server address validation failed."
		return 1
	fi

	_log "info" "listening on: ${listen_addr}:${listen_port}"
	_log "info" "fec parameters: ${fec}"

	local cmdline="/usr/bin/speederv2 -c -l ${listen_addr}:${listen_port} -r ${server_addr}:${server_port} -f ${fec}"
	[ -n "$key" ] && cmdline="${cmdline} -k ${key}"
	[ -n "$mode" ] && cmdline="${cmdline} --mode ${mode}" && _log "info" "mode: ${mode}"
	[ -n "$timeout" ] && cmdline="${cmdline} --timeout ${timeout}"
	[ -n "$mtu" ] && cmdline="${cmdline} --mtu ${mtu}"
	[ -n "$queue_len" ] && cmdline="${cmdline} -q ${queue_len}"
	[ -n "$jitter" ] && cmdline="${cmdline} -j ${jitter}"
	[ -n "$interval" ] && cmdline="${cmdline} -i ${interval}"
	[ -n "$random_drop" ] && cmdline="${cmdline} --random-drop ${random_drop}"
	[ "$disable_obscure" -eq "1" ] && cmdline="${cmdline} --disable-obscure"
	[ -n "$log_level" ] && cmdline="${cmdline} --log-level ${log_level}"

	$(eval echo $cmdline) >> "/var/log/${NAME}/${NAME}.${server}.log" &
	echo $! > "/var/run/${NAME}.${server}.pid"
	return 0
}

start() {
	pgrep "/usr/bin/speederv2" >/dev/null 2>&1 && return

	if ! validate_config_section "general" ; then
		_log "err" "Config validate failed."
		return 1
	fi
	has_valid_server $server || return 1
	for srv in $server; do
		start_instance $srv
	done
}

stop() {
	local pids=$(pgrep "/usr/bin/speederv2" 2> /dev/null)
	[ $? -ne 0 ] && return
	for pid in $pids; do
		kill $pid >/dev/null 2>&1
	done
	return 0
}

restart() {
	stop
	sleep 1
	start
}
